// <auto-generated />
using System;
using El3edda.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace El3edda.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220322220943_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("El3edda.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Origin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("El3edda.Models.Mobile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Serial")
                        .HasColumnType("int");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.Property<int>("UnitsSold")
                        .HasColumnType("int");

                    b.Property<int>("WarrantyPeriod")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("Serial")
                        .IsUnique();

                    b.ToTable("Mobile");
                });

            modelBuilder.Entity("El3edda.Models.Mobile", b =>
                {
                    b.HasOne("El3edda.Models.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("El3edda.Models.Media", "Media", b1 =>
                        {
                            b1.Property<int>("MobileId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.Property<string>("URL")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("MobileId", "Id");

                            b1.ToTable("Media");

                            b1.WithOwner()
                                .HasForeignKey("MobileId");
                        });

                    b.OwnsOne("El3edda.Models.Specs", "Specs", b1 =>
                        {
                            b1.Property<int>("MobileId")
                                .HasColumnType("int");

                            b1.Property<int>("BatteryCapacity")
                                .HasColumnType("int");

                            b1.Property<string>("CPU")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("CameraMegaPixels")
                                .HasColumnType("float");

                            b1.Property<int>("Color")
                                .HasColumnType("int");

                            b1.Property<byte>("OS")
                                .HasColumnType("tinyint");

                            b1.Property<byte>("Screen")
                                .HasColumnType("tinyint");

                            b1.Property<double>("Weight")
                                .HasColumnType("float");

                            b1.HasKey("MobileId");

                            b1.ToTable("Mobile");

                            b1.WithOwner()
                                .HasForeignKey("MobileId");

                            b1.OwnsOne("El3edda.Models.Dimension", "Dimensions", b2 =>
                                {
                                    b2.Property<int>("SpecsMobileId")
                                        .HasColumnType("int");

                                    b2.Property<double>("Height")
                                        .HasColumnType("float");

                                    b2.Property<double>("Thickness")
                                        .HasColumnType("float");

                                    b2.Property<double>("Width")
                                        .HasColumnType("float");

                                    b2.HasKey("SpecsMobileId");

                                    b2.ToTable("Mobile");

                                    b2.WithOwner()
                                        .HasForeignKey("SpecsMobileId");
                                });

                            b1.Navigation("Dimensions")
                                .IsRequired();
                        });

                    b.Navigation("Manufacturer");

                    b.Navigation("Media");

                    b.Navigation("Specs")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
